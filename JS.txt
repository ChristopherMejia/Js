Lenguaje interpretado, orientado a objetos débilmente tipado y dinámico.

Valores primitivos: entero, strings, boolean, null, undefined
Tipos objetos:  array, [], {}

typeof : sirve para conocer que tipo de dato es una variable. 
toUpperCase(): Convierte las letras a mayusculas
toLowerCase(): Convierte las letras en minusculas

charAt(parametro): Optiene un caracter de acuerdo a la posición
push('parametro'): agrega elemento a la ultima posición del arreglo
pop('parametro'): saca el alemento del arreglo
unshift('parametro): agrega un elemento al inicio del arreglo 
length: optiene la cantidad de elementos de un arreglo
shift('parametro) : saca un elemento de la primera posición del arreglo
indexOf("parametro"): regresa el index o la posición del arreglo. 
substr(parametro, segundo parametro): ??

promp(); Funcion para recibir datos 

Libreria "Math" cuenta con varias funciones para las operaciones
por ejemplo:

Math.pow(10,2); Eleve a la potencia el primer parametro
Math.round(6.5); Redondea al numero entero más cercano

toString(); Funcion para imprimir en cadena una variable
toFixed(); Funcion que imprime un limite de decimales


var personas = [,,,] <- Arrays
var paula = {
	nombre: ..,
	edad: ...,
} <- Objeto


Promesas: Pensemos las promesas como valores que aun no conocemos.
Las promesas tienen 3 estados, 
Estado Pending (creación de la promesa)
Estado fulfilled (Cuando la promesa se resuelve)
Estado reject (Si ocurre algun error en la función asincrona)